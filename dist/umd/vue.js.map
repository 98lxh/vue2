{"version":3,"file":"vue.js","sources":["../../src/compiler/index.js","../../src/utils/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["//将解析后的结果组合成ast树 -> stack\nfunction createAstElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: 1,\n    children: [],\n    parent: null,\n    attrs\n  }\n}\n\n\nlet root = null;\nconst stack = [];\nfunction parserHTML(html) {\n\n  function start(tagName, attributes) {\n    const parent = stack[stack.length - 1]\n    const element = createAstElement(tagName, attributes)\n    //设置根节点\n    if (!root) {\n      root = element\n    }\n    //放入栈中时 记录自己的父节点\n    element.parent = parent\n    //为这个父节点添加子节点为当前节点\n    if (parent) {\n      parent.children.push(element)\n    }\n    stack.push(element)\n  }\n\n  function end(tagName) {\n    let last = stack.pop();\n    if (last.tag !== tagName) {\n      //闭合标签有误\n      throw new Error('标签有误')\n    }\n  }\n\n  function chars(text) {\n    text = text.replace(/\\s/g, \" \");\n    let parent = stack[stack.length - 1]\n    if (text.trim()) {\n      parent.children.push({\n        type: 3,\n        text\n      })\n    }\n  }\n\n  function advance(len) {\n    html = html.slice(len)\n  }\n\n  //解析节点属性生成节点属性的字符串\n  function parserAttrs(attrs) {\n    let attrStr = \"\";\n    for (let i = 0; i < attrs.length; i++) {\n      const attr = attrs[i];\n      let [attrName,attrValue] = attr.split('=')\n      attrValue = attrValue.replace(/\"/g,'')\n      if(attrName === 'style'){\n        let obj = {};\n        attrValue.split(';').forEach(item => {\n          let [key,value] = item.split(':')\n          if(key) obj[key] = value.replace(/\\s+/g, \"\");\n        })\n        attrValue = obj\n      }\n      attrStr += `${attrName}:${JSON.stringify(attrValue)},`\n    }\n\n    return `{${attrStr.slice(0,-1)}}`\n  }\n\n  function parserStartTag(html) {\n    //不是开始标签\n    if (html.indexOf('</') === 0) return false\n    const end = html.indexOf('>');\n    //拿到标签内容\n    const content = html.slice(1, end)\n    advance(end + 1)\n    //拿到第一个空格的位置\n    const firstSpaceIdx = content.indexOf(' ')\n    let tagName = '', attrStr = ''\n    if (firstSpaceIdx === -1) {\n      //没有找到空格，则将content作为标签\n      tagName = content\n    } else {\n      //找到了空格则到第一个空格之前的是标签名\n      tagName = content.slice(0, firstSpaceIdx)\n      attrStr = content.slice(firstSpaceIdx + 1)\n    }\n\n    //处理style\n    const styleIdx = attrStr.indexOf('style')\n    let styleStr;\n    if(styleIdx !== -1){\n      styleStr = attrStr.slice(styleIdx,attrStr.length - 1)\n      attrStr = attrStr.slice(0,styleIdx)\n    }\n\n    const attrArr = attrStr ? attrStr.trim().split(' ') : [];\n    \n    //解析成一个属性字符串\n    const attrs = attrArr.length || styleStr ? parserAttrs([...attrArr,styleStr]) : 'undefined'\n    return {\n      tagName,\n      attrs\n    }\n  }\n\n  function parserEndTag(html) {\n    const end = html.indexOf('>')\n    const tagStart = html.indexOf('/');\n    const tagEnd = html.indexOf('>');\n    const tagName = html.slice(tagStart + 1, tagEnd);\n    advance(end + 1)\n    return {\n      tagName\n    }\n  }\n\n  //解析的内容如果存在一直解析\n  while (html) {\n    let textEnd = html.indexOf('<');\n    //解析到开头\n    if (textEnd === 0) {\n      //解析开始标签\n      const startTagMatch = parserStartTag(html);\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue;\n      }\n      const endTagMatch = parserEndTag(html);\n      if (endTagMatch) {\n        end(endTagMatch.tagName);\n        continue;\n      }\n    }\n\n    //文本的处理\n    let text;\n    if (textEnd > 0) {\n      text = html.slice(0, textEnd);\n    }\n\n    if (text) {\n      chars(text)\n      advance(text.length)\n    }\n  }\n\n  return root\n}\n\nfunction gen(node){\n  if(node.type === 1){\n    //元素节点\n    return generate(node)\n  }else{\n    //文本\n    let text = node.text;\n    const tokens = [];\n    while(text.trim()){\n      //文本的结束位置\n      const textEndIndex = text.indexOf(\"{{\")\n      if(textEndIndex === 0){\n        //表达式的结束位置\n        const execEndIndex = text.indexOf(\"}}\")\n        tokens.push(`_s(${text.slice(textEndIndex + 2,execEndIndex)})`)\n        text = text.slice(execEndIndex + 2)\n      }else{\n        tokens.push(JSON.stringify(text.slice(0,textEndIndex)))\n        text = text.slice(textEndIndex)\n      }\n    }\n    return `_v(${tokens.join(\"+\")})`\n  }\n}\n\nfunction genChildren(el){\n  const children = el.children;\n  if(children && children.length > 0){\n    return `${children.map(c =>gen(c)).join(',')}`\n  }else{\n    return false\n  }\n}\n\nfunction generate(el) {\n  const children = genChildren(el);\n  let code = `_c(\"${el.tag}\",${el.attrs})${\n    children ? `,${children}` : ''\n  }`\n\n  return code\n}\n\n\nexport function compileToFunction(template) {\n  //解析字符串 将html转换成ast语法树\n  const root = parserHTML(template);\n  //将ats语法树转换成js语法\n  //<div id=\"app\"></div> -> _c(\"div\",{id:app},\"\")\n  let code = generate(root);\n  //所有的模板引擎实现都需要new Function + with\n  let renderFn = new Function(`with(this){return ${code}}`)\n  return renderFn\n}\n","//判断是否为一个对象\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null\n}\n\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}\n","const oldArrayMethods = Array.prototype;\nexport const arrayMetods = Object.create(oldArrayMethods);\n\n\nconst methods = [\n  'push',\n  'shift',\n  'unshift',\n  'pop',\n  'splice',\n  'reverse'\n]\n\nmethods.forEach(method => {\n  arrayMetods[method] = function (...args) {\n    //调用原生的数组方法\n    const result = oldArrayMethods[method].apply(this, args)\n    let inserted;\n    let ob = this.__ob__;\n\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2)\n        break;\n      default:\n        break;\n    }\n\n    if (inserted) {\n      ob.observerArray(inserted)\n    }\n\n    return result\n  }\n})\n","\nimport { def, isObject } from \"../utils/index\";\nimport { arrayMetods } from \"./array\"\n\nfunction defineReactive(target, key, value) {\n  observe(value);\n  return Object.defineProperty(target, key, {\n    get() {\n      /**\n       * todo:依赖收集\n      */\n      return value\n    },\n    set(newValue) {\n      if (value === newValue) return\n      console.log('更新数据')\n      observe(newValue)\n      /**\n       * todo:依赖更新\n      */\n      value = newValue\n    }\n  })\n}\n\nclass Observer {\n  constructor(value) {\n    //缺点:vue2中如果层次过多，那么需要递归的解析对象属性\n    def(value, '__ob__', this);\n    if (Array.isArray(value)) {\n      //如果数组下放对象则劫持\n      value.__proto__ = arrayMetods\n      this.observerArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      const value = data[key]\n      defineReactive(data, key, value)\n    })\n  }\n\n  observerArray(value) {\n    value.forEach(v => {\n      observe(v)\n    })\n  }\n}\n\nexport function observe(data) {\n  if (!isObject(data)) {\n    return data\n  }\n\n  //观测数据\n  new Observer(data)\n}\n","\nimport { observe } from \"./observer/index\";\n\nexport function initState(vm) {\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethods(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps(vm) { }\nfunction initMethods(vm) { }\nfunction initData(vm) {\n  //数据初始化\n  let data = vm.$options.data;\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n  //对象劫持\n  //MVVM 数据驱动视图\n\n  observe(data);\n}\nfunction initComputed(vm) { }\nfunction initWatch(vm) { }\n","\nimport { compileToFunction } from \"./compiler/index\";\nimport { initState } from \"./state\";\n\n//在原型添加一个init方法\nexport function initMixin(Vue) {\n  //初始化流程\n  Vue.prototype._init = function (options) {\n\n    //数据劫持\n    const vm = this;\n    vm.$options = options;\n\n    //初始化状态\n    initState(vm);\n\n    if(vm.$options.el){\n      //数据挂载到模板 \n      vm.$mount(vm.$options.el);\n    }\n  }\n\n  Vue.prototype.$mount = function(el){\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n    //模板转换成渲染函数\n    if(!options.render){\n        //没有render找template\n        let template = options.template;\n        if(!template && el){\n          //没有template 取el的内容作为模板\n          template = el.outerHTML\n                   \n          let render = compileToFunction(template);\n          options.render = render\n        }\n    }\n  }\n}\n","import { initMixin } from \"./init\";\n//核心\nfunction Vue(options) {\n  //进行初始化\n  this._init(options)\n\n}\n\ninitMixin(Vue)\n\nexport default Vue\n"],"names":["createAstElement","tagName","attrs","tag","type","children","parent","root","stack","parserHTML","html","start","attributes","length","element","push","end","last","pop","Error","chars","text","replace","trim","advance","len","slice","parserAttrs","attrStr","i","attr","split","attrName","attrValue","obj","forEach","item","key","value","JSON","stringify","parserStartTag","indexOf","content","firstSpaceIdx","styleIdx","styleStr","attrArr","parserEndTag","tagStart","tagEnd","textEnd","startTagMatch","endTagMatch","gen","node","generate","tokens","textEndIndex","execEndIndex","join","genChildren","el","map","c","code","compileToFunction","template","renderFn","Function","isObject","def","data","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMetods","create","methods","method","args","result","apply","inserted","ob","__ob__","observerArray","defineReactive","target","observe","get","set","newValue","console","log","Observer","isArray","__proto__","walk","keys","v","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}